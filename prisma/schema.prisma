// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model users {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  reserva   reservas[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model categorias {
  id        Int      @id @default(autoincrement())
  nome      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pratos    pratos[]
}

model pratos {
  id          Int        @id @default(autoincrement())
  nome        String
  descricao   String     @unique
  categoria   categorias @relation(fields: [categoriaId], references: [id])
  categoriaId Int
  imagem      String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model mesas {
  id        Int        @id @default(autoincrement())
  code      String     @unique
  seats     Int
  status    Boolean
  reserva   reservas[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model reservas {
  id        Int      @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  phone     String
  seatCount Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mesaId Int
  mesa   mesas @relation(fields: [mesaId], references: [id])

  userID Int
  user   users @relation(fields: [userID], references: [id])
}

model chef {
  id                Int      @id @default(autoincrement())
  name              String   @unique
  bio               String
  role              String
  image             String
  yearsOfExperience Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}
